<?xml version="1.0"?>
<doc>
<assembly>
<name>
BarreSIB
</name>
</assembly>
<members>
<member name="T:BarreSIB.cboTypeCatalogue">
	<summary>
 Commande qui permet de définir le type de catalogue utilisé pour afficher la description des valeurs d'attributs.
</summary>
	<remarks>
Ce traitement est utilisable en mode interactif à l'aide de ses interfaces graphiques et doit être
utilisé dans ArcMap (ArcGisESRI).

Auteur : Michel Pothier
Date : 25 mars 2015
</remarks>
</member><member name="T:BarreSIB.cboEnvCatalogue">
	<summary>
 Commande qui permet de définir l'environnement de travail (instance) de la base de données des catalogues 
 utilisé pour afficher la description des valeurs d'attributs.
</summary>
	<remarks>
Ce traitement est utilisable en mode interactif à l'aide de ses interfaces graphiques et doit être
utilisé dans ArcMap (ArcGisESRI).

Auteur : Michel Pothier
Date : 25 mars 2015
</remarks>
</member><member name="P:BarreSIB.dckMenuRelations.Hook">
	<summary>
 Host object of the dockable window
 </summary>
</member><member name="T:BarreSIB.dckMenuRelations.AddinImpl">
	<summary>
 Implementation class of the dockable window add-in. It is responsible for
 creating and disposing the user interface class for the dockable window.
 </summary>
</member><member name="M:BarreSIB.dckMenuRelations.#ctor(System.Object)">
	<summary>
 Routine qui permet d'initialiser le menu lors de la création du menu.
</summary>
</member><member name="M:BarreSIB.dckMenuRelations.Show(System.Boolean)">
	<summary>
 Routine qui permet d'afficher le menu.
</summary>
</member><member name="M:BarreSIB.dckMenuRelations.IsVisible">
	<summary>
 Routine qui permet d'indiquer si le menu est affiché.
</summary>
</member><member name="M:BarreSIB.dckMenuRelations.IdentifierMap(ESRI.ArcGIS.Carto.IMap)">
	<summary>
 Routine qui permet d'identifier toutes les relations pour tous les FeatureLayer et toutes les tables dans la Map.
</summary>
	<param name="pMap"> Interface ESRI contenant tous les FeatureLayers et tous les StandaloneTables.</param>
</member><member name="M:BarreSIB.dckMenuRelations.IdentifierRelations(ESRI.ArcGIS.Carto.IRelationshipClassCollection,System.Windows.Forms.TreeNode@,Microsoft.VisualBasic.Collection@)">
	<summary>
 Routine qui permet d'identifier toutes les relations liées à une table et de les ajouter dans le Node de la table.
</summary>
	<param name="pRelClassColl"> Interface ESRI contenant toutes les relations d'une table.</param>
	<param name="qNode"> Interface ESRI contenant le node de la table traitée.</param>
	<param name="qRelColl"> Objet contenant les relations traitées.</param>
</member><member name="M:BarreSIB.dckMenuRelations.btnRafraichirRelations_Click(System.Object,System.EventArgs)">
	<summary>
 Routine qui permet de rafraichir la structure des relations.
</summary>
</member><member name="M:BarreSIB.dckMenuRelations.btnCopierRelation_Click(System.Object,System.EventArgs)">
	<summary>
 Routine qui permet de copier en mémoire la relation entre la table sélectionnée et la table parent.
</summary>
</member><member name="M:BarreSIB.dckMenuRelations.btnCollerRelation_Click(System.Object,System.EventArgs)">
	<summary>
 Routine qui permet de coller la relation présente en mémoire dans la table sélectionnée,
 mais seulement si c'est la même classe que celle du parent.
</summary>
</member><member name="M:BarreSIB.dckMenuRelations.btnDetruireRelation_Click(System.Object,System.EventArgs)">
	<summary>
 Routine qui permet de détruire la relation entre la table sélectionnée et la table parent.
</summary>
</member><member name="M:BarreSIB.dckMenuRelations.btnAjouterRelation_Click(System.Object,System.EventArgs)">
	<summary>
 Routine qui permet d'ajouter une relation entre la table sélectionnée et une nouvelle table à partir du menu de construction.
</summary>
</member><member name="M:BarreSIB.dckMenuRelations.btnOuvrirTable_Click(System.Object,System.EventArgs)">
	<summary>
 Routine qui permet d'ouvrir la table sélectionnée.
</summary>
</member><member name="M:BarreSIB.dckMenuRelations.btnIdentifier_Click(System.Object,System.EventArgs)">
	<summary>
 Routine qui permet de remplir le menu d'identification à partir des éléments sélectionnés de la table sélectionnée
</summary>
</member><member name="M:BarreSIB.dckMenuRelations.treRelations_DragDrop(System.Object,System.Windows.Forms.DragEventArgs)">
	<summary>
 Routine appelée lorsqu'un DragAndDrop est terminé.
 La relation est déplacée ou copiée à condition que le lien de la relation soit valide avec celui de la cible.
 Si la cible ne correspond pas à un Node du TreeView, la relation est détruite.
</summary>
</member><member name="M:BarreSIB.dckMenuRelations.treRelations_DragEnter(System.Object,System.Windows.Forms.DragEventArgs)">
	<summary>
 Routine appelée lorsqu'un DragAndDrop est débuté pour donnéer l'effect visuel.
</summary>
</member><member name="M:BarreSIB.dckMenuRelations.treRelations_ItemDrag(System.Object,System.Windows.Forms.ItemDragEventArgs)">
	<summary>
 Routine appelée lorsqu'un DragAndDrop est initié.
 La souris de gauche permet de déplacer une relation.
 Le bouton de droite permet de copier une relation.
</summary>
</member><member name="M:BarreSIB.dckMenuRelations.treRelations_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
	<summary>
 Routine appelée lorsqu'une touche du clavier est enfoncée avec un objet du menu des relations.
 On ouvre tous les Noeuds si la touche Shift est enfoncée.
</summary>
</member><member name="M:BarreSIB.dckMenuRelations.treRelations_BeforeExpand(System.Object,System.Windows.Forms.TreeViewCancelEventArgs)">
	<summary>
 Routine appelée lorsqu'un noeud doit être ouvert.
 On n'ouvre pas le noeud s'il s'agit d'un double-click.
</summary>
</member><member name="M:BarreSIB.dckMenuRelations.treRelations_BeforeCollapse(System.Object,System.Windows.Forms.TreeViewCancelEventArgs)">
	<summary>
 Routine appelée lorsqu'un noeud doit être fermé.
 On ne ferme pas le noeud s'il s'agit d'un double-click.
</summary>
</member><member name="M:BarreSIB.dckMenuRelations.treRelations_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
	<summary>
 Routine appelée lorsqu'un click de souris est effectué.
 On conserve le nombre de clicks afin de savoir si c'est un double-click qui est effectué.
</summary>
</member><member name="M:BarreSIB.dckMenuRelations.treRelations_NodeMouseClick(System.Object,System.Windows.Forms.TreeNodeMouseClickEventArgs)">
	<summary>
 Routine appelée lorsqu'un click de souris est effectué sur un Node du TreeView de relations.
 Elle permet d'afficher la requête attributive dans le Rich Text Box du même menu.
 Elle permet également d'afficher le nombre d'éléments sélectionnés dans le Label de message
</summary>
</member><member name="M:BarreSIB.dckMenuRelations.treRelations_NodeMouseDoubleClick(System.Object,System.Windows.Forms.TreeNodeMouseClickEventArgs)">
	<summary>
 Routine appelé lorsqu'un double-click de souris est effectué sur un node du TreeView de relations.
 Avec le double-clic gauche, elle permet d'ouvrir ou fermer tous les nodes sous celui sélectionné.
 Avec le double-clic droit, elle permet d'ouvrir le menu des tables d'attributs correspondant au Noeud sélectionné.
</summary>
</member><member name="M:BarreSIB.dckMenuRelations.btnTransfererListes_Click(System.Object,System.EventArgs)">
	<summary>
 Routine qui permet de construire et transférer la requête attributive (DefinitionQuery) pour chaque liste d'attributs
 dans la table sélectionnée.
</summary>
</member><member name="M:BarreSIB.dckMenuRelations.btnTransfererListesTables_Click(System.Object,System.EventArgs)">
	<summary>
 Routine qui permet de construire et transférer la requête attributive (DefinitionQuery) pour chaque liste d'attributs
 dans toutes les tables en relation avec la table sélectionnée.
</summary>
</member><member name="M:BarreSIB.dckMenuRelations.btnTransfererListesVides_Click(System.Object,System.EventArgs)">
	<summary>
 Routine qui permet de vider les requêtes attributive de toutes les tables en relation avec celle sélectionnée.
</summary>
</member><member name="M:BarreSIB.dckMenuRelations.btnAjouterListeAttributs_Click(System.Object,System.EventArgs)">
	<summary>
 Routine qui permet d'ajouter des valeurs d'attributs dans la liste conservé en mémoire.
</summary>
</member><member name="M:BarreSIB.dckMenuRelations.btnDetruireListeAttributs_Click(System.Object,System.EventArgs)">
	<summary>
 Routine qui permet de détruire la liste des valeurs d'attributs conservés en mémoire.
</summary>
</member><member name="M:BarreSIB.dckMenuRelations.btnSelectionnerRequete_Click(System.Object,System.EventArgs)">
	<summary>
 Routine qui permet de sélectionner tous les éléments de la table en fonction de son Definition Query.
 Le nombre d'éléments sélectionnés est afficher dans le message texte.
</summary>
</member><member name="M:BarreSIB.dckMenuRelations.btnModifierRequete_Click(System.Object,System.EventArgs)">
	<summary>
 Routine qui permet de modifier la requête attributive (DefinitionQuery) contenu dans un FeatureLayer ou un StandaloneTable.
 Un menu pour construire la requête est affiché.
</summary>
</member><member name="M:BarreSIB.dckMenuRelations.btnDetruireRequete_Click(System.Object,System.EventArgs)">
	<summary>
 Routine qui permet de détruire la requête attributive de la table sélectionnée.
</summary>
</member><member name="M:BarreSIB.dckMenuRelations.rtxRequete_LostFocus(System.Object,System.EventArgs)">
	<summary>
 Routine appelé lorsque le focus n'est plus sur le RichTextBox contenant la requête.
 Elle permet de mettre la nouvelle requête modifiée dans la table sélectionnée.
</summary>
</member><member name="M:BarreSIB.dckMenuRelations.btnRechercherRelation_Click(System.Object,System.EventArgs)">
	<summary>
 Routine qui permet de rechercher tous les éléments en relation liés à tous les éléments de la table traitée.
 Le traitement est récursif entre les éléments en relation trouvés et ses éléments en relation.
 Le traitement arrête lorsque les éléments en relation trouvés n'ont plus de relation.
</summary>
</member><member name="M:BarreSIB.dckMenuRelations.dgvListesAttributs_DoubleClick(System.Object,System.EventArgs)">
	<summary>
 Routine qui permet de construire une liste des valeurs d'attributs présentes dans la table.
</summary>
</member><member name="M:BarreSIB.dckMenuRelations.ExtraireTableNoeudEnfant(Microsoft.VisualBasic.Collection@,System.Windows.Forms.TreeNode)">
	<summary>
 Routine qui permet de remplir la collection des tables en relation à partir d'un noeud de départ.
</summary>
	<param name="qTableColl">Collection contenant toutes les tables en relation.</param>
	<param name="qNode">Objet contenant le nom de la Table de départ et des noeuds enfants.</param>
	<remarks>
 Si le node est invalide, rien n'est effectué.
</remarks>
</member><member name="M:BarreSIB.dckMenuRelations.RechercherElementsEnRelationParNode(ESRI.ArcGIS.Geodatabase.ITable@,System.Windows.Forms.TreeNode@)">
	<summary>
 Routine qui permet de rechercher tous les éléments en relation liés à tous les éléments de la table traitée.
 Le traitement est récursif entre les éléments en relation trouvés et ses éléments en relation.
 Le traitement arrête lorsque les éléments en relation trouvés n'ont plus de relation.
</summary>
	<param name="pTable">Interface contenant la table de base.</param>
	<param name="qNode">Interface contenant le nom de la Table en relation.</param>
	<remarks>
 Si le node est invalide, c'est qu'il n'y a plus de table en relation. Le traitement récursif est alors arrêté.
</remarks>
</member><member name="M:BarreSIB.dckMenuRelations.RechercherFeatureEnRelation(ESRI.ArcGIS.Geodatabase.ITable@,ESRI.ArcGIS.Carto.IFeatureLayer@)">
	<summary>
 Fonction permet de sélectionner les éléments d'un FeatureLayer en fonction des éléments sélectionnés contenus dans une table de base.
 Les éléments trouvés sont sélectionnés dans la table en relation.
 Un relation doit obligatoirement être présente entre deux tables. 
</summary>
	<param name="pTable">Interface contenant la table de base.</param>
	<param name="pTableRel">Interface contenant les éléments à sélectionner dans le FeatureLayer en relation.</param>
	<remarks>
 Si aucun élément n'est sélectionné dans la table de base, rien n'est effectué.
</remarks>
</member><member name="M:BarreSIB.dckMenuRelations.RechercherRowEnRelation(ESRI.ArcGIS.Geodatabase.ITable@,ESRI.ArcGIS.Carto.IStandaloneTable@)">
	<summary>
 Fonction permet de sélectionner les éléments d'un StandaloneTable en fonction des éléments contenus dans une table de base.
 Les éléments trouvés sont sélectionnés dans la table en relation.
 Un relation doit obligatoirement être présente entre deux tables. 
</summary>
	<param name="pTable">Interface contenant la table de base.</param>
	<param name="pTableRel">Interface contenant les éléments à sélectionner dans la Table en relation.</param>
	<remarks>
 Si aucun élément n'est sélectionné dans la table de base, rien n'est effectué.
</remarks>
</member><member name="M:BarreSIB.dckMenuRelations.DataGridAttributElement(ESRI.ArcGIS.Geodatabase.ITable,System.Windows.Forms.DataGridView@)">
	<summary>
 Routine permet de remplir le DataGridView à partir des attributs d'un élément spécifié. 
</summary>
	<param name="pTable">Contient la table à traiter.</param>
	<param name="qDataGridView">DataGridView à remplir.</param>
	<remarks>
 Si l'élément est invalide, le DataGridView est vide.
</remarks>
</member><member name="M:BarreSIB.dckMenuRelations.ConserverListesValeurs">
	<summary>
 Routine permet de conserver en mémoire les listes des valeurs par attribut de la table sélectionnée. 
</summary>
	<remarks>
Les listes des valeurs sont conservées en mémoire de façon globale.
</remarks>
</member><member name="M:BarreSIB.dckMenuRelations.ConstruireRequeteAttributive(ESRI.ArcGIS.Geodatabase.ITable)">
	<summary>
 Routine qui permet de construire et retourner une requête attributive selon la liste d'attributs pour la table sélectionnée.
</summary>
</member><member name="T:BarreSIB.dckMenuRelations">
	<summary>
 Designer class of the dockable window add-in. It contains user interfaces that
 make up the dockable window.
 </summary>
</member><member name="F:BarreSIB.modBarreSIB.m_TrackCancel">
	<summary>Interface utilisé pour arrêter un traitement en progression.</summary>
</member><member name="F:BarreSIB.modBarreSIB.m_Application">
	<summary>Interface ESRI contenant l'application ArcMap.</summary>
</member><member name="F:BarreSIB.modBarreSIB.m_MxDocument">
	<summary>Interface ESRI contenant le document ArcMap.</summary>
</member><member name="F:BarreSIB.modBarreSIB.m_MenuConnexion">
	<summary>Objet contenant le menu de connexion.</summary>
</member><member name="F:BarreSIB.modBarreSIB.m_MenuIdentification">
	<summary>Objet contenant le menu d'identification.</summary>
</member><member name="F:BarreSIB.modBarreSIB.m_MenuRelations">
	<summary>Objet contenant le menu des relations.</summary>
</member><member name="F:BarreSIB.modBarreSIB.m_MapLayer">
	<summary>Objet qui permet de gérer la Map et ses layers.</summary>
</member><member name="F:BarreSIB.modBarreSIB.m_Catalogue">
	<summary>Objet qui permet de gérer l'information des catalogues.</summary>
</member><member name="F:BarreSIB.modBarreSIB.m_Compteur">
	<summary>Conteur de de recherche effectuée.</summary>
</member><member name="F:BarreSIB.modBarreSIB.m_MaxItems">
	<summary>Conteur de de recherche effectuée.</summary>
</member><member name="F:BarreSIB.modBarreSIB.m_CreerLayer">
	<summary>Indique si on doit créer un Layer de sélection après une recherche.</summary>
</member><member name="F:BarreSIB.modBarreSIB.m_DocumentEventsOpenDocument">
	<summary>Interface ESRI qui permet de gérer l'événement lorsque qu'un document est ouvert.</summary>
</member><member name="F:BarreSIB.modBarreSIB.m_DocumentEventsNewDocument">
	<summary>Interface ESRI qui permet de gérer l'événement lorsque qu'un nouveau document est ouvert.</summary>
</member><member name="F:BarreSIB.modBarreSIB.m_ActiveViewEventsContentsChanged">
	<summary>Interface ESRI qui permet de gérer l'événement lorsque qu'un nouveau document est activé.</summary>
</member><member name="F:BarreSIB.modBarreSIB.m_ActiveViewEventsItemAdded">
	<summary>Interface ESRI qui permet de gérer l'événement lorsque qu'un nouvel item est ajouté à la Map active.</summary>
</member><member name="F:BarreSIB.modBarreSIB.m_ActiveViewEventsItemDeleted">
	<summary>Interface ESRI qui permet de gérer l'événement lorsque qu'un nouvel item est retiré de la Map active</summary>
</member><member name="F:BarreSIB.modBarreSIB.m_Height">
	<summary>Valeur initiale de la dimension en hauteur du menu de production.</summary>
</member><member name="F:BarreSIB.modBarreSIB.m_Width">
	<summary>Valeur initiale de la dimension en largeur du menu de production.</summary>
</member><member name="M:BarreSIB.modBarreSIB.CreerLayerSelection(ESRI.ArcGIS.Carto.IFeatureLayer,System.String)">
	<summary>
 Routine permet de créer un FeatureLayer de sélection, le rendre visible, de l'ajouter au début de la Map active et de rendre invisible les autres Layers.
</summary>
	<param name="pFeatureLayer">FeatureLayer contenant la sélection d'éléments.</param>
	<param name="sNomLayer">Nom de l'attribut à ajouter dans la requête.</param>
	<returns>"IFeatureLayer" généré et ajouté dans la Map active</returns>
	<remarks>
 Si aucun élément n'est sélectionné, rien n'est effectué.
</remarks>
</member><member name="M:BarreSIB.modBarreSIB.ZoomToFeatureSelection(ESRI.ArcGIS.Carto.IFeatureSelection@)">
	<summary>
 Routine qui permet d'effectuer un Zoom selon les éléments sélectionnés d'un FeatureLayer.
</summary>
	<param name="pFeatureSelection">Interface qui permet d'extraire les éléments sélectionnés d'un FeatureLayer.</param>
	<remarks>
 Si aucune sélection n'est présente, Aucun Zomm n'est effectué.
</remarks>
</member><member name="M:BarreSIB.modBarreSIB.AjouterRelationShipTable(ESRI.ArcGIS.Geodatabase.IDataset,ESRI.ArcGIS.Geodatabase.IRelationshipClass@)">
	<summary>
 Routine qui permet de copier une ou toutes les relationships d'une table d'origine vers une table de destination.
 Une table est soit un FeatureLayer ou un StandaloneTable.
</summary>
	<param name="pTableOrigine">Interface contenant les relations à copier.</param>
	<param name="pRelClass">Interface contenant la classe en relation et ses paramètres.</param>
	<remarks>
 Si aucune relation n'est présent dans la table d'origine, aucune relation ne sera ajoutée dans la table de destination.
</remarks>
</member><member name="M:BarreSIB.modBarreSIB.CopierRelationShipFeatureLayer(ESRI.ArcGIS.Carto.IFeatureLayer,ESRI.ArcGIS.Carto.IFeatureLayer@)">
	<summary>
 Routine qui permet de copier tous les relationships de l'ancien FeatureLayer vers le nouveau FeatureLayer.. 
</summary>
	<param name="pFeatureLayer">Interface contenant les relationship et correspondant à l'ancien FeatureLayer.</param>
	<param name="pNewFeatureLayer">Interface correspondantau nouveau FeatureLayer et dans lequel on veut copier les relationship.</param>
	<remarks>
 Si aucun relationship n'est présent dans l'ancien FeatureLayer, aucun relationship ne sera ajouté dans le nouveau.
</remarks>
</member><member name="M:BarreSIB.modBarreSIB.CopierRelationShipTable(ESRI.ArcGIS.Geodatabase.IDataset,ESRI.ArcGIS.Geodatabase.IDataset@,System.String)">
	<summary>
 Routine qui permet de copier une ou toutes les relationships d'une table d'origine vers une table de destination.
 Une table est soit un FeatureLayer ou un StandaloneTable.
</summary>
	<param name="pTableOrigine">Interface contenant les relations à copier.</param>
	<param name="pTableDestination">Interface contenant la table dans lesquels les relations seront copiées.</param>
	<param name="sNomRelation">Nom de la relation à copier. "*" indique toutes les relations.</param>
	<remarks>
 Si aucune relation n'est présent dans la table d'origine, aucune relation ne sera ajoutée dans la table de destination.
</remarks>
</member><member name="M:BarreSIB.modBarreSIB.DetruireRelationShipTable(ESRI.ArcGIS.Geodatabase.IDataset,System.String)">
	<summary>
 Routine qui permet de détruire une ou toutes les relationships d'une table.
 Une table est soit un FeatureLayer ou un StandaloneTable.
</summary>
	<param name="pTable">Interface contenant les relations à détruire.</param>
	<param name="sNomRelation">Nom de la relation à détruire. "*" indique toutes les relations.</param>
	<remarks>
 Si aucune relation n'est présente dans la table, aucune relation ne sera détruire dans la table.
</remarks>
</member><member name="M:BarreSIB.modBarreSIB.TrouverRelationShipTable(ESRI.ArcGIS.Geodatabase.IDataset,System.String)">
	<summary>
 Routine qui permet de trouver une relation d'une table en fonction d'un nom de relation.
 Une table est soit un FeatureLayer ou un StandaloneTable.
</summary>
	<param name="pTable">Interface contenant les relations à trouver.</param>
	<param name="sNomRelation">Nom de la relation à trouver.</param>
	<remarks>
 Si aucune relation n'est présente dans la table, aucune relation ne sera détruire dans la table.
</remarks>
</member><member name="T:BarreSIB.modBarreSIB">
	<summary>
Librairies de routines contenant toutes les fonctionnalités nécessaires au système SIB.
</summary>
	<remarks>
Auteur : Michel Pothier
</remarks>
</member><member name="T:BarreSIB.cmdActiverMenuIdentification">
	<summary>
 Commande qui permet d'activer le menu d'identification des éléments sélectionnés 
 afin de pouvoir montrer leurs attributs et les divers liens avec d'autres tables 
 et leurs attributs via les relations.
</summary>
	<remarks>
Ce traitement est utilisable en mode interactif à l'aide de ses interfaces graphiques et doit être
utilisé dans ArcMap (ArcGisESRI).

Auteur : Michel Pothier
Date : 20 novembre 2013
</remarks>
</member><member name="T:BarreSIB.cmdConnecterSIB">
	<summary>
 Commande qui permet de se connecter à SIB afin de pouvoir utiliser tous les outils reliés à SIB.
</summary>
	<remarks>
Ce traitement est utilisable en mode interactif à l'aide de ses interfaces graphiques et doit être
utilisé dans ArcMap (ArcGisESRI).

Auteur : Michel Pothier
Date : 27 août 2014
</remarks>
</member><member name="T:BarreSIB.cmdIdentifierSelection">
	<summary>
Commande qui permet d'identifier les éléments sélectionnés en remplissant le menu d'identification.
</summary>
	<remarks>
Ce traitement est utilisable en mode interactif à l'aide de ses interfaces graphiques et doit être
utilisé dans ArcMap (ArcGisESRI).

Auteur : Michel Pothier
</remarks>
</member><member name="P:BarreSIB.dckMenuIdentification.Hook">
	<summary>
 Host object of the dockable window
 </summary>
</member><member name="T:BarreSIB.dckMenuIdentification.AddinImpl">
	<summary>
 Implementation class of the dockable window add-in. It is responsible for
 creating and disposing the user interface class for the dockable window.
 </summary>
</member><member name="M:BarreSIB.dckMenuIdentification.#ctor(System.Object)">
	<summary>
 Routine qui permet d'initialiser le menu lors de la création du menu.
</summary>
</member><member name="M:BarreSIB.dckMenuIdentification.Show(System.Boolean)">
	<summary>
 Routine qui permet d'afficher le menu.
</summary>
</member><member name="M:BarreSIB.dckMenuIdentification.IsVisible">
	<summary>
 Routine qui permet d'indiquer si le menu est affiché.
</summary>
</member><member name="M:BarreSIB.dckMenuIdentification.Initialiser">
	<summary>
 Routine qui permet d'initialiser le menu d'identification.
</summary>
</member><member name="M:BarreSIB.dckMenuIdentification.IdentifierMap(ESRI.ArcGIS.Carto.IMap)">
	<summary>
 Routine qui permet d'identifier les éléments sélectionnés de tous les FeatureLayers visibles dans la Map.
</summary>
	<param name="pMap"> Interface ESRI contenant tous les FeatureLayers et leurs éléments sélectionnés à ajouter dans le menu.</param>
</member><member name="M:BarreSIB.dckMenuIdentification.IdentifierFeatureLayer(ESRI.ArcGIS.Carto.IFeatureLayer,System.Boolean)">
	<summary>
 Routine qui permet d'identifier les éléments sélectionnés dans le FeatureLayer.
</summary>
	<param name="pFeatureLayer"> Interface ESRI contenant les éléments sélectionnés d'un FeatureLayer à ajouter dans le menu.</param>
	<param name="bInitialiser"> Inidique si on doit initialiser le menu avant d'ajouter les éléments sélectionnés.</param>
</member><member name="M:BarreSIB.dckMenuIdentification.IdentifierTable(ESRI.ArcGIS.Carto.IStandaloneTable,System.Boolean)">
	<summary>
 Routine qui permet d'identifier les éléments sélectionnés dans un StandaloneTable.
</summary>
	<param name="pStandaloneTable"> Interface ESRI contenant les éléments sélectionnés d'un StandaloneTable à ajouter dans le menu.</param>
	<param name="bInitialiser"> Inidique si on doit initialiser le menu avant d'ajouter les éléments sélectionnés.</param>
</member><member name="M:BarreSIB.dckMenuIdentification.IdentifierTable2(ESRI.ArcGIS.Carto.IStandaloneTable,System.Boolean)">
	<summary>
 Routine qui permet d'identifier les éléments sélectionnés dans un StandaloneTable.
</summary>
	<param name="pStandaloneTable"> Interface ESRI contenant les éléments sélectionnés d'un StandaloneTable à ajouter dans le menu.</param>
	<param name="bInitialiser"> Inidique si on doit initialiser le menu avant d'ajouter les éléments sélectionnés.</param>
</member><member name="M:BarreSIB.dckMenuIdentification.IdentifierFeature(ESRI.ArcGIS.Carto.IFeatureLayer,ESRI.ArcGIS.Geodatabase.IFeature,System.Boolean)">
	<summary>
 Routine qui permet d'identifier un seul élément sélectionné dans un FeatureLayer.
</summary>
	<param name="pFeatureLayer"> Interface ESRI représentant le FeatureLayer de l'élément à ajouter dans le menu.</param>
	<param name="pFeature"> Interface ESRI représentant l'élément à ajouter dans le menu.</param>
	<param name="bInitialiser"> Inidique si on doit initialiser le menu avant d'ajouter l'élément spécifié.</param>
</member><member name="M:BarreSIB.dckMenuIdentification.Descendant.Compare(System.Object,System.Object)">
	<summary>
 Fonction qui permet d'inverser la comparaison pour simuler le tri descendant.
</summary>
</member><member name="T:BarreSIB.dckMenuIdentification.Descendant">
	<summary>
 Classe qui permet d'inverser la comparaison pour simuler le tri descendant.
</summary>
</member><member name="M:BarreSIB.dckMenuIdentification.FlashGeometry(ESRI.ArcGIS.Geometry.IGeometry,ESRI.ArcGIS.Display.IRgbColor,ESRI.ArcGIS.Display.IDisplay,System.Int32)">
	<summary>Flash geometry on the display. The geometry type could be polygon, polyline, point, or multipoint.</summary>
	<param name="geometry"> An IGeometry interface</param>
	<param name="color">An IRgbColor interface</param>
	<param name="display">An IDisplay interface</param>
	<param name="delay">A System.Int32 that is the time im milliseconds to wait.</param>
	<remarks></remarks>
</member><member name="M:BarreSIB.dckMenuIdentification.treIdentification_AfterSelect(System.Object,System.Windows.Forms.TreeViewEventArgs)">
	<summary>
 Routine permet de remplir le DataGridView si un élément est sélectionné. 
</summary>
</member><member name="M:BarreSIB.dckMenuIdentification.treIdentification_BeforeExpand(System.Object,System.Windows.Forms.TreeViewCancelEventArgs)">
	<summary>
 Routine permet de remplir le Node d'un TreeView lorsqu'un Node doit être ouvert. 
</summary>
</member><member name="M:BarreSIB.dckMenuIdentification.AjouterNoeudTable(System.Windows.Forms.TreeNode@,ESRI.ArcGIS.Carto.IRelationshipClassCollection)">
	<summary>
 Routine permet d'ajouter tous les nodes de tables (FeatureLayer ou StandAloneTable). 
</summary>
	<param name="qNode">Interface contenant le Node d'affichage.</param>
	<param name="pRelClassColl">Interface contenant les classes en relation avec le FeatureLayer traité.</param>
	<remarks>
 Si aucune relation n'est présente, le Node est vide.
</remarks>
</member><member name="M:BarreSIB.dckMenuIdentification.AjouterNoeudElement2(System.Windows.Forms.TreeNode@,ESRI.ArcGIS.Geodatabase.ITable,ESRI.ArcGIS.Geodatabase.IRow,System.String,ESRI.ArcGIS.Geodatabase.ITable,System.String)">
	<summary>
 Routine qui permet d'ajouter tous les noeuds d'éléments de la table de relation liés avec l'élément de base.
</summary>
	<param name="qNode">Contient le noeud traité.</param>
	<param name="pTable">Nom de la table contenant l'élément de base.</param>
	<param name="pRow">Élément de base pour lequel on recherche ses relations dans la table en relation.</param>
	<param name="sAttribut">Nom de l'attribut de l'élément de base.</param>
	<param name="pTableRel">Nom de la table contenant les éléments en relation avec l'élément de base.</param>
	<param name="sAttributRel">Nom de l'attribut de la table de relation.</param>
	<remarks>
 Si l'élément de base ou les attributs sont invalides, rien n'est effectué.
</remarks>
</member><member name="M:BarreSIB.dckMenuIdentification.AjouterNoeudElement(System.Windows.Forms.TreeNode@,ESRI.ArcGIS.Geodatabase.ITable,ESRI.ArcGIS.Geodatabase.IRow,System.String,ESRI.ArcGIS.Geodatabase.ITable,System.String)">
	<summary>
 Routine qui permet d'ajouter tous les noeuds d'éléments de la table de relation liés avec l'élément de base.
</summary>
	<param name="qNode">Contient le noeud traité.</param>
	<param name="pTable">Nom de la table contenant l'élément de base.</param>
	<param name="pRow">Élément de base pour lequel on recherche ses relations dans la table en relation.</param>
	<param name="sAttribut">Nom de l'attribut de l'élément de base.</param>
	<param name="pTableRel">Nom de la table contenant les éléments en relation avec l'élément de base.</param>
	<param name="sAttributRel">Nom de l'attribut de la table de relation.</param>
	<remarks>
 Si l'élément de base ou les attributs sont invalides, rien n'est effectué.
</remarks>
</member><member name="M:BarreSIB.dckMenuIdentification.ExtraireRelation(ESRI.ArcGIS.Geodatabase.ITable,ESRI.ArcGIS.Geodatabase.ITable)">
	<summary>
 Fonction qui permet d'extraire une relation d'une table à partir d'un nom de table en relation.
</summary>
	<param name="pTable">Interface qui contient la table pour laquelle on veut extraire ses relations.</param>
	<param name="pTableRel">Interface qui contient la table en relation.</param>
	<returns>"IRelationshipClass" contenant l'information de la relation.</returns>
	<remarks>
 Si aucune relation n'est présente, Nothing est retourné.
</remarks>
</member><member name="M:BarreSIB.dckMenuIdentification.DataGridAttributElement(ESRI.ArcGIS.Geodatabase.IRow,System.Windows.Forms.DataGridView@)">
	<summary>
 Routine permet de remplir le DataGridView à partir des attributs d'un élément spécifié. 
</summary>
	<param name="pRow">Contient l'élément à traiter.</param>
	<param name="qDataGridView">DataGridView à remplir.</param>
	<remarks>
 Si l'élément est invalide, le DataGridView est vide.
</remarks>
</member><member name="T:BarreSIB.dckMenuIdentification">
	<summary>
 Designer class of the dockable window add-in. It contains user interfaces that
 make up the dockable window.
 </summary>
</member><member name="T:BarreSIB.cmdAjouterSelectionLayer">
	<summary>
Commande qui permet de créer un nouveau « FeatureLayer » contenant seulement les éléments de la sélection 
de chacun des « FeatureLayers » visibles dans lesquels une sélection est présente. 
Les anciens « FeatureLayers » seront détruits. Seuls les éléments sélectionnés seront conservés dans les 
« FeatureLayers » peu importe s’ils contiennent ou non une liste d’identifiants d’éléments. 
Les requêtes attributives seront conservées dans chacun des « FeatureLayers » si présentes, mais pas les jointures. 
Les « FeatureLayers » non visibles ou n’ayant aucun élément de sélectionné ne seront pas affectés par ce traitement.
</summary>
	<remarks>
Ce traitement est utilisable en mode interactif à l'aide de ses interfaces graphiques et doit être
utilisé dans ArcMap (ArcGisESRI).

Auteur : Michel Pothier
</remarks>
</member><member name="P:BarreSIB.My.Resources.Resources.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:BarreSIB.My.Resources.Resources.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="P:BarreSIB.My.Resources.Resources.Requete">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="T:BarreSIB.My.Resources.Resources">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member><member name="T:BarreSIB.tooIdentifierEnveloppe">
	<summary>
Commande qui permet d'identifier et sélectionner des éléments selon une enveloppe et de remplir le menu d'identification.
</summary>
	<remarks>
Ce traitement est utilisable en mode interactif à l'aide de ses interfaces graphiques et doit être
utilisé dans ArcMap (ArcGisESRI).

Auteur : Michel Pothier
</remarks>
</member><member name="F:BarreSIB.clsGererCatalogue.gsEnv">
	<summary>Nom de l'environnement de travail (instance de la BD) [CATREL_PRO/CATREL_TST].</summary>
</member><member name="F:BarreSIB.clsGererCatalogue.giCatalogue">
	<summary>Numéro du type de catalogue (FEAT_CATAL_TYPE).</summary>
</member><member name="P:BarreSIB.clsGererCatalogue.Env">
	<summary>
 Propriété qui permet de définir et retourner l'environnement de travail (instance de la BD).
</summary>
</member><member name="P:BarreSIB.clsGererCatalogue.ConnectionString">
	<summary>
 Propriété qui permet de retourner le texte de connexion à la Bd des catalogues.
</summary>
</member><member name="P:BarreSIB.clsGererCatalogue.NumeroCatalogue">
	<summary>
 Propriété qui permet de définir et retourner le numéro du type de catalogue (FEAT_CATAL_TYPE).
</summary>
</member><member name="P:BarreSIB.clsGererCatalogue.NomCatalogue">
	<summary>
 Propriété qui permet de définir et retourner le nom du type de catalogue (FEAT_CATAL_TYPE).
</summary>
</member><member name="M:BarreSIB.clsGererCatalogue.#ctor(System.String,System.Int32)">
	<summary>
Routine qui permet d'initialiser la classe pour gérer l'information des catalogues.
</summary>
</member><member name="M:BarreSIB.clsGererCatalogue.finalize">
	<summary>
Routine qui permet de vider la mémoire des objets de la classe.
</summary>
</member><member name="M:BarreSIB.clsGererCatalogue.EstValide">
	<summary>
 Permet d'indiquer si la BD des catalogues est valide.
</summary>
	<returns>"Boolean" pour indiquer si la BD est valide (True) ou invalide (False).</returns>
</member><member name="M:BarreSIB.clsGererCatalogue.ExtraireListeEnv">
	<summary>
 Fonction qui permet d'extraire la liste des environnements de travail.
</summary>
	<returns>"Dictionary(Of String, String)" correspondant à la liste des environnements possibles (Env, Env).</returns>
</member><member name="M:BarreSIB.clsGererCatalogue.ExtraireListeCatalogue">
	<summary>
 Fonction qui permet d'extraire la liste des catalogues possibles.
</summary>
	<returns>"Dictionary(Of String, Integer)" correspondant à la liste des catalogues possibles (nomCatalogue, numeroCatalogue).</returns>
</member><member name="M:BarreSIB.clsGererCatalogue.ExtraireListeSousCatalogue">
	<summary>
 Fonction qui permet d'extraire la liste des sous-catalogues possibles.
</summary>
	<returns>"Dictionary(Of String, Integer)" correspondant à la liste des sous-catalogues possibles (nomSousCatalogue, numeroSousCatalogue).</returns>
</member><member name="M:BarreSIB.clsGererCatalogue.ExtraireListeClasse(System.Int32)">
	<summary>
 Fonction qui permet d'extraire la liste des classes possibles.
</summary>
	<param name="iSousCatalogue">Numéro du sous-catalogue (FEAT_CATAL_ID), -1='Tous les sous-catalogues'.</param>
	<returns>"Collection" correspondant à la liste des classes possibles (nomClasse, nomClasse).</returns>
</member><member name="M:BarreSIB.clsGererCatalogue.ExtraireListeCodeSpecifique(System.String)">
	<summary>
 Fonction qui permet d'extraire la liste des codes spécifiques possibles.
</summary>
	<param name="sClasse">Nom de la classe (FEAT_TYPE_NAME_DATABASE), ""='Toutes les classes'.</param>
	<returns>"Collection" correspondant à la liste des classes possibles (codeSpécifique, nomCodeSpécifique).</returns>
</member><member name="M:BarreSIB.clsGererCatalogue.ExtraireListeAttribut(System.Int32,System.Boolean)">
	<summary>
 Fonction qui permet d'extraire la liste des attributs possibles.
</summary>
	<param name="iCodeSpecifique">Numéro du code spécifique (FEAT_TYPE_CODE_BD), -1='Tous les codes spécifiques'.</param>
	<param name="bAttributCode">Indique si on veut seulement les attributs codés, False='Tous les attributs', True='Seulement les attributs codés' .</param>
	<returns>"Dictionary(Of String, String)" correspondant à la liste des attributs possibles (nomAttribut, nomAttribut).</returns>
</member><member name="M:BarreSIB.clsGererCatalogue.ExtraireListeValeurAttribut(System.String,System.Int32,System.String)">
	<summary>
 Fonction qui permet d'extraire la liste des valeurs d'attributs possibles.
</summary>
	<param name="sClasse">Nom de la classe (FEAT_TYPE_NAME_DATABASE), ""='Toutes les classes'.</param>
	<param name="iCodeSpecifique">Numéro du code spécifique (FEAT_TYPE_CODE_BD), -1='Tous les codes spécifiques'.</param>
	<param name="sAttribut">Nom de l'attribut (FEAT_ATTR_NAME_DATABASE), ""='Tous les attributs'.</param>
	<returns>"Dictionary(Of String, String)" correspondant à la liste des valeurs d'attributs possibles (nomAttribut_codeValeur, nomValeur).</returns>
</member><member name="T:BarreSIB.clsGererCatalogue">
	<summary>
 Librairie de Classe qui permet de gérer l'information d'une base de données des catalogues.
</summary>
	<remarks>
Cette librairie est utilisable pour les outils interactifs ou Batch dans ArcMap (ArcGis de ESRI).

Auteur : Michel Pothier
Date : 26 mars 2015
</remarks>
</member><member name="P:BarreSIB.dckMenuConnexion.Hook">
	<summary>
 Host object of the dockable window
 </summary>
</member><member name="T:BarreSIB.dckMenuConnexion.AddinImpl">
	<summary>
 Implementation class of the dockable window add-in. It is responsible for
 creating and disposing the user interface class for the dockable window.
 </summary>
</member><member name="M:BarreSIB.dckMenuConnexion.#ctor(System.Object)">
	<summary>
 Routine qui permet d'initialiser le menu lors de la création du menu.
</summary>
</member><member name="M:BarreSIB.dckMenuConnexion.Show(System.Boolean)">
	<summary>
 Routine qui permet d'afficher le menu.
</summary>
</member><member name="M:BarreSIB.dckMenuConnexion.IsVisible">
	<summary>
 Routine qui permet d'indiquer si le menu est affiché.
</summary>
</member><member name="M:BarreSIB.dckMenuConnexion.cboUsager_LostFocus(System.Object,System.EventArgs)">
	<summary>
 Routine appelée lorsque le focus est perdu sur le ComboBos de l'usager.
</summary>
</member><member name="M:BarreSIB.dckMenuConnexion.btnExecuter_Click(System.Object,System.EventArgs)">
	<summary>
 Routine appelée lorsque la connexion à SIB est nécessaire.
</summary>
</member><member name="M:BarreSIB.dckMenuConnexion.btnFermer_Click(System.Object,System.EventArgs)">
	<summary>
 Routine appelée lorsqu'on veut annuler la connexion à SIB.
</summary>
</member><member name="T:BarreSIB.dckMenuConnexion">
	<summary>
 Designer class of the dockable window add-in. It contains user interfaces that
 make up the dockable window.
 </summary>
</member><member name="T:BarreSIB.cmdActiverMenuRelations">
	<summary>
 Commande qui permet d'activer le menu des relations afin de pouvoir montrer les relations entre toutes les tables
 et pouvoir définir et afficher la requête attributive de la table sélectionnée.
</summary>
	<remarks>
Ce traitement est utilisable en mode interactif à l'aide de ses interfaces graphiques et doit être
utilisé dans ArcMap (ArcGisESRI).

Auteur : Michel Pothier
Date : 14 juillet 2014
</remarks>
</member><member name="P:BarreSIB.My.ThisAddIn.IDs.cmdActiverMenuRelations">
	<summary>
Returns 'MPO_BarreSIB_cmdActiverMenuRelations', the id declared for Add-in Button class 'cmdActiverMenuRelations'
</summary>
</member><member name="P:BarreSIB.My.ThisAddIn.IDs.cmdActiverMenuIdentification">
	<summary>
Returns 'MPO_BarreSIB_cmdActiverMenuIdentification', the id declared for Add-in Button class 'cmdActiverMenuIdentification'
</summary>
</member><member name="P:BarreSIB.My.ThisAddIn.IDs.cmdAjouterSelectionLayer">
	<summary>
Returns 'MPO_BarreSIB_cmdAjouterSelectionLayer', the id declared for Add-in Button class 'cmdAjouterSelectionLayer'
</summary>
</member><member name="P:BarreSIB.My.ThisAddIn.IDs.cmdIdentifierSelection">
	<summary>
Returns 'MPO_BarreSIB_cmdIdentifierSelection', the id declared for Add-in Button class 'cmdIdentifierSelection'
</summary>
</member><member name="P:BarreSIB.My.ThisAddIn.IDs.tooIdentifierEnveloppe">
	<summary>
Returns 'MPO_BarreSIB_tooIdentifierEnveloppe', the id declared for Add-in Tool class 'tooIdentifierEnveloppe'
</summary>
</member><member name="P:BarreSIB.My.ThisAddIn.IDs.cmdConnecterSIB">
	<summary>
Returns 'MPO_BarreSIB_cmdConnecterSIB', the id declared for Add-in Button class 'cmdConnecterSIB'
</summary>
</member><member name="P:BarreSIB.My.ThisAddIn.IDs.cboEnvCatalogue">
	<summary>
Returns 'MPO_BarreSIB_cboEnvCatalogue', the id declared for Add-in ComboBox class 'cboEnvCatalogue'
</summary>
</member><member name="P:BarreSIB.My.ThisAddIn.IDs.cboTypeCatalogue">
	<summary>
Returns 'MPO_BarreSIB_cboTypeCatalogue', the id declared for Add-in ComboBox class 'cboTypeCatalogue'
</summary>
</member><member name="P:BarreSIB.My.ThisAddIn.IDs.dckMenuRelations">
	<summary>
Returns 'MPO_BarreSIB_dckMenuRelations', the id declared for Add-in DockableWindow class 'dckMenuRelations+AddinImpl'
</summary>
</member><member name="P:BarreSIB.My.ThisAddIn.IDs.dckMenuIdentification">
	<summary>
Returns 'MPO_BarreSIB_dckMenuIdentification', the id declared for Add-in DockableWindow class 'dckMenuIdentification+AddinImpl'
</summary>
</member><member name="P:BarreSIB.My.ThisAddIn.IDs.dckMenuConnexion">
	<summary>
Returns 'MPO_BarreSIB_dckMenuConnexion', the id declared for Add-in DockableWindow class 'dckMenuConnexion+AddinImpl'
</summary>
</member><member name="T:BarreSIB.My.ThisAddIn.IDs">
	<summary>
A class for looking up Add-in id strings declared in the associated configuration xml file (.esriaddinx).
</summary>
</member><member name="T:BarreSIB.My.ThisAddIn">
	<summary>
A class for looking up declarative information in the associated configuration xml file (.esriaddinx).
</summary>
</member><member name="M:BarreSIB.My.Internal.AddInStartupObject.GetThis">
	<summary>
 Expose this instance of Add-in class externally
 </summary>
</member><member name="F:BarreSIB.clsGererMapLayer.gpMap">
	<summary>Interface contenant la Map à Gérer.</summary>
</member><member name="P:BarreSIB.clsGererMapLayer.Map">
	<summary>
 Propriété qui permet de définir et retourner la Map traitée.
</summary>
</member><member name="P:BarreSIB.clsGererMapLayer.FeatureLayerCollection">
	<summary>
 Propriété qui permet de définir et retourner la collection de FeatureLayer traitée.
</summary>
</member><member name="M:BarreSIB.clsGererMapLayer.#ctor(ESRI.ArcGIS.Carto.IMap,System.Boolean)">
	<summary>
Routine qui permet d'initialiser la classe.
</summary>
</member><member name="M:BarreSIB.clsGererMapLayer.finalize">
	<summary>
Routine qui permet de vider la mémoire des objets de la classe.
</summary>
</member><member name="M:BarreSIB.clsGererMapLayer.ExtraireTableByName(System.String)">
	<summary>
 Fonction qui permet d'extraire une table (FeatureLayer ou StandaloneTable) correspondant au nom spécifié.
</summary>
	<param name="sTexte">Texte utilisé pour trouver la Table par défaut.</param>
	<returns>"ITable" correspondant au texte recherché, sinon "Nothing".</returns>
</member><member name="M:BarreSIB.clsGererMapLayer.ExtraireFeatureLayerByName(System.String)">
	<summary>
 Fonction qui permet d'extraire le FeatureLayer correspondant au nom spécifié.
</summary>
	<param name="sTexte">Texte utilisé pour trouver le FeatureLayer par défaut.</param>
	<returns>"IFeatureLayer" correspondant au texte recherché, sinon "Nothing".</returns>
</member><member name="M:BarreSIB.clsGererMapLayer.ExtraireTableByDatasetName(System.String)">
	<summary>
 Fonction qui permet d'extraire une table (FeatureLayer ou StandaloneTable) correspondant au nom du dataset name spécifié.
</summary>
	<param name="sTexte">Texte utilisé pour trouver la Table par défaut.</param>
	<returns>"ITable" correspondant au texte recherché, sinon "Nothing".</returns>
</member><member name="M:BarreSIB.clsGererMapLayer.ExtraireFeatureLayerByDatasetName(System.String)">
	<summary>
 Fonction qui permet d'extraire le FeatureLayer correspondant au nom du dataset name spécifié.
</summary>
	<param name="sTexte">Texte utilisé pour trouver le FeatureLayer par défaut.</param>
	<returns>"IFeatureLayer" correspondant au texte recherché, sinon "Nothing".</returns>
</member><member name="M:BarreSIB.clsGererMapLayer.ExtraireStandaloneTableByDatasetName(System.String)">
	<summary>
 Fonction qui permet d'extraire le StandaloneTable correspondant au nom du dataset name spécifié.
</summary>
	<param name="sTexte">Texte utilisé pour trouver le FeatureLayer par défaut.</param>
	<returns>"IStandaloneTable" correspondant au texte recherché, sinon "Nothing".</returns>
</member><member name="M:BarreSIB.clsGererMapLayer.ExtraireStandaloneTableByName(System.String)">
	<summary>
 Fonction qui permet d'extraire le StandaloneTable correspondant au nom du dataset name spécifié.
</summary>
	<param name="sTexte">Texte utilisé pour trouver le FeatureLayer par défaut.</param>
	<returns>"IStandaloneTable" correspondant au texte recherché, sinon "Nothing".</returns>
</member><member name="M:BarreSIB.clsGererMapLayer.DefinirCollectionFeatureLayer(System.Boolean,ESRI.ArcGIS.Geometry.esriGeometryType)">
	<summary>
 Fonction qui permet de définir la collection des FeatureLayers présents dans la Map.
 On peut indiquer si on veut aussi extraire les FeatureLayers non visibles.
</summary>
	<param name="bNonVisible"> Indique si on doit aussi extraire les FeatureLayers non visibles.</param>
	<param name="pEsriGeometryType"> Contient le type de géométrie des FeatureLayers recherchés.</param>
	<return>"Collection" contenant les "IFeatureLayer" visible ou non selon ce qui est demandé.</return>
</member><member name="M:BarreSIB.clsGererMapLayer.DefinirGroupLayer(ESRI.ArcGIS.Carto.ILayer,System.Int32@)">
	<summary>
 Fonction qui permet d'extraire le GroupLayer dans lequel le Layer recherché est présent.
</summary>
	<param name="pLayerRechercher">Interface contenant le Layer à rechercher dans la Map active.</param>
	<param name="nPosition">Position su Layer dans le GroupLayer.</param>
	<returns>"Collection" contenant les "IGroupLayer" recherchés.</returns>
</member><member name="M:BarreSIB.clsGererMapLayer.EstVisible(ESRI.ArcGIS.Carto.ILayer,System.Boolean)">
	<summary>
 Fonction qui permet d'indiquer si le FeatureLayer est visible ou non dans la IMap.
</summary>
	<param name="pLayerRechercher"> Interface ESRI contenant le Layer à rechercher.</param>
	<param name="bPresent"> Contient l'indication si le Layer à rechercher est présent dans la Map.</param>
	<return>"Collection" contenant les "IFeatureLayer" visible ou non.</return>
</member><member name="M:BarreSIB.clsGererMapLayer.DefinirCollectionFeatureLayerGroup(Microsoft.VisualBasic.Collection@,ESRI.ArcGIS.Carto.IGroupLayer,System.Boolean,ESRI.ArcGIS.Geometry.esriGeometryType)">
	<summary>
 Routine qui permet de définir la collection des FeatureLayers contenus dans un GroupLayer.
 On peut indiquer si on veut aussi extraire les FeatureLayers non visibles.
</summary>
	<param name="qFeatureLayerColl">Collection des FeatureLayer.</param>
	<param name="pGroupLayer">Interface ESRI contenant un group de Layers.</param>
	<param name="bNonVisible">Indique si on doit aussi extraire les FeatureLayers non visibles.</param>
	<param name="pEsriGeometryType"> Contient le type de géométrie des FeatureLayers recherchés.</param>
</member><member name="M:BarreSIB.clsGererMapLayer.ExtraireGroupLayerGroup(ESRI.ArcGIS.Carto.IGroupLayer,ESRI.ArcGIS.Carto.ILayer,System.Int32@)">
	<summary>
 Routine qui permet d'extraire le GroupLayer contenant un FeatureLayer.
 Le GroupLayer recherché est contenu dans un GroupLayer.
</summary>
	<param name="pGroupLayer">Interface ESRI contenant un groupe de Layers.</param>
	<param name="pLayerRechercher">Interface ESRI contenant le Layer à rechercher.</param>
	<param name="nPosition">Position su Layer dans le GroupLayer.</param>
</member><member name="M:BarreSIB.clsGererMapLayer.EstVisibleGroup(ESRI.ArcGIS.Carto.IGroupLayer,ESRI.ArcGIS.Carto.ILayer,System.Boolean)">
	<summary>
 Fonction qui permet d'indiquer si le FeatureLayer est visible ou non dans la IMap.
</summary>
	<param name="pGroupLayer">Interface ESRI contenant un group de Layers.</param>
	<param name="pLayerRechercher"> Interface ESRI contenant le Layer à rechercher.</param>
	<param name="bPresent"> Contient l'indication si le Layer à rechercher est présent dans la Map.</param>
	<return>"Collection" contenant les "IFeatureLayer" visible ou non.</return>
</member><member name="T:BarreSIB.clsGererMapLayer">
	<summary>
 Librairie de Classe qui permet de manipuler les différents types de Layer contenu dans une Map.
</summary>
	<remarks>
Cette librairie est utilisable pour les outils interactifs ou Batch dans ArcMap (ArcGis de ESRI).

Auteur : Michel Pothier
Date : 6 Mai 2011
</remarks>
</member>
</members>
</doc>